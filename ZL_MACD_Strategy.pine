//@version=5
strategy("Zero Lag MACD with ZLEMA Strategy", overlay=true)

// Input parameters
fastLength = input.int(12, title="Fast EMA Length")
slowLength = input.int(26, title="Slow EMA Length")
signalSmoothing = input.int(9, title="Signal Smoothing")

// Function to calculate ZLEMA
zlema(source, length) =>
    ema1 = ta.ema(source, length)
    ema2 = ta.ema(ema1, length)
    zlema = ema1 + (ema1 - ema2)
    zlema

// Calculate MACD using ZLEMA
fastZLEMA = zlema(close, fastLength)
slowZLEMA = zlema(close, slowLength)
macdLine = fastZLEMA - slowZLEMA

// Smoothing the signal line using ZLEMA
signalLine = zlema(macdLine, signalSmoothing)

// MACD histogram
histogram = macdLine - signalLine

// Plotting MACD and signal line
plot(macdLine, color=color.blue, title="MACD Line")
plot(signalLine, color=color.red, title="Signal Line")

// Plotting zero line
hline(0, "Zero Line", color=color.gray)

// Plotting histogram
plot(histogram, style=plot.style_histogram, color=(histogram >= 0 ? color.green : color.red), title="Histogram")

// Strategy logic
var bool longCondition = na
var bool shortCondition = na

if (macdLine > signalLine and not longCondition)
    longCondition := true
if (macdLine < signalLine and not shortCondition)
    shortCondition := true

if (macdLine < signalLine and longCondition)
    longCondition := false
if (macdLine > signalLine and shortCondition)
    shortCondition := false

// Entry and exit conditions
if (longCondition)
    strategy.entry("Long", strategy.long)
if (shortCondition)
    strategy.entry("Short", strategy.short)

// Exit conditions
if (longCondition and macdLine < signalLine)
    strategy.close("Long")
if (shortCondition and macdLine > signalLine)
    strategy.close("Short")
